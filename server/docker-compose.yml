version: '3.8'

services:
  # PgBouncer - Connection pooling cho PostgreSQL (kết nối về host DB)
  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: shopsifu_pgbouncer
    restart: unless-stopped
    ports:
      - '6432:6432'
    environment:
      DB_HOST: 103.147.186.84
      DB_USER: shopsifu
      DB_PASSWORD: Shopsifu2025
      DB_NAME: shopsifu
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 20
      RESERVE_POOL_SIZE: 5
      RESERVE_POOL_TIMEOUT: 5
      MAX_DB_CONNECTIONS: 100
      MAX_USER_CONNECTIONS: 100
    volumes:
      - ./monitoring/config/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./monitoring/config/userlist.txt:/etc/pgbouncer/userlist.txt:ro
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -p 6432 -U shopsifu']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Kibana - kết nối tới Elasticsearch trên host
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: shopsifu_kibana
    restart: unless-stopped
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://103.147.186.84:9200
      - XPACK_SECURITY_ENABLED=false
      - SERVER_NAME=shopsifu-kibana
      - SERVER_HOST=0.0.0.0
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 512M
    healthcheck:
      test: ['CMD-SHELL', 'curl -fsS http://localhost:5601/api/status | grep -q kibana']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: shopsifu_prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - monitoring-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana
  grafana:
    image: grafana/grafana:11.4.0
    container_name: shopsifu_grafana
    restart: unless-stopped
    ports:
      - '3001:3000'
    env_file: .env.docker
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_COOKIE_HTTPONLY=${GRAFANA_SECURITY_COOKIE_HTTPONLY}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_LOG_LEVEL=info
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      # Gỡ Home dashboard mặc định để bạn import qua UI tự do
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL Exporter - kết nối tới host PostgreSQL
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:v0.16.0
    container_name: shopsifu_postgres_exporter
    restart: unless-stopped
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_NAME: 'postgresql://shopsifu:Shopsifu2025@103.147.186.84:5432/shopsifu?sslmode=disable'
      PG_EXPORTER_LOG_LEVEL: 'info'
      PG_EXPORTER_WEB_LISTEN_ADDRESS: ':9187'
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9187/metrics || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis Exporter - kết nối tới host Redis
  redis_exporter:
    image: oliver006/redis_exporter:v1.60.0
    container_name: shopsifu_redis_exporter
    restart: unless-stopped
    ports:
      - '9121:9121'
    environment:
      REDIS_ADDR: '103.147.186.84:6379'
      REDIS_PASSWORD: ''
      REDIS_NAMESPACE: 'redis'
      REDIS_EXPORTER_LOG_FORMAT: 'txt'
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9121/metrics || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Elasticsearch Exporter - kết nối tới host ES
  elasticsearch_exporter:
    image: prometheuscommunity/elasticsearch-exporter:v1.6.0
    container_name: shopsifu_elasticsearch_exporter
    restart: unless-stopped
    ports:
      - '9114:9114'
    environment:
      ES_URI: 'http://103.147.186.84:9200'
      ES_TIMEOUT: '30s'
      ES_ALL: 'true'
      ES_INDICES: 'true'
      ES_INDICES_SETTINGS: 'true'
      ES_SHARDS: 'true'
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9114/metrics || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Node Exporter
  node_exporter:
    image: prom/node-exporter:v1.8.0
    container_name: shopsifu_node_exporter
    restart: unless-stopped
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.filesystem.fs-types-exclude=^(sys|proc|auto)fs$$'
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9100/metrics || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: shopsifu_alertmanager
    restart: unless-stopped
    ports:
      - '9093:9093'
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.listen-address=:9093'
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:9093/-/healthy || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  prometheus_data:
    driver: local
    name: shopsifu_prometheus_data
  grafana_data:
    driver: local
    name: shopsifu_grafana_data
  alertmanager_data:
    driver: local
    name: shopsifu_alertmanager_data

networks:
  monitoring-network:
    driver: bridge
