@startuml Manage Product List Sequence
!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceArrowThickness 2
skinparam roundcorner 16

title Chi Tiết Luồng GET /manage-product/products

actor "ShopOwner/Admin" as U
participant "AccessTokenGuard" as AG
participant "ManageProductController" as MPC
participant "ManageProductService" as MPS
participant "ProductRepo" as PR
participant "I18nService" as IS
database "PostgreSQL (Prisma)" as DB

U -> AG: Request + access_token
AG -> AG: Validate JWT, load user context
AG --> MPC: Forward với user
activate MPC

MPC -> MPS: list({ query, user })
activate MPS

MPS -> MPS: validatePrivilege(userIdRequest=user.userId,\n roleNameRequest=user.roleName,\n createdById=query.createdById)

alt Không hợp lệ (không phải chủ shop và không phải Admin)
  MPS -> MPS: throw ForbiddenException
  MPS --> MPC: 403 Forbidden
  MPC --> U: 403 Forbidden
  deactivate MPS
  deactivate MPC
  stop
end

MPS -> PR: list({ page, limit, languageId=I18nContext.lang,\n createdById=query.createdById, isPublic=query.isPublic,\n brandIds, categories, minPrice, maxPrice, name, orderBy, sortBy })
activate PR

note right of PR
• where.deletedAt = null
• where.createdById = query.createdById
• isPublic:
  - true: where.publishedAt <= now
  - false: where.publishedAt is null OR > now
• Các filter name/brand/categories/price như public list
• include.productTranslations theo languageId
end note

PR -> DB: product.count({ where })
DB --> PR: totalItems
PR -> DB: product.findMany({ where, include, orderBy, skip, take })
DB --> PR: products[]
PR --> MPS: { data, metadata }
deactivate PR

MPS -> IS: t('product.product.success.GET_SUCCESS')
IS --> MPS: message
MPS --> MPC: { message, data, metadata }
deactivate MPS

MPC --> U: 200 OK + JSON
deactivate MPC

@enduml


