@startuml User Module - Sequence Overview
!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceArrowThickness 2
skinparam roundcorner 20
skinparam maxmessagesize 60

title Mô-đun Người Dùng - Tổng Quan Luồng Xử Lý
note top : Hệ thống quản lý người dùng với phân quyền và xử lý lỗi toàn diện

actor "Admin" as Admin
actor "User" as User
participant "UserController" as UC
participant "UserService" as US
participant "UserRepo" as UR
participant "SharedUserRepo" as SUR
participant "SharedRoleRepo" as SRR
participant "HashingService" as HS
participant "I18nService" as IS
participant "ActiveRolePermissions" as ARP
participant "ActiveUser" as AU
participant "PrismaService" as PS
database "PostgreSQL" as DB

== GET /users - Lấy Danh Sách Người Dùng ==
Admin -> UC: GET /users?page=1&limit=10
UC -> US: list(pagination)

US -> UR: list(pagination)
UR -> UR: Tính toán pagination metadata
note right
Logic Phân Trang:
• skip = (page - 1) * limit
• take = limit
• Parallel queries: count + findMany
• Include role information
end note

UR -> PS: count() với WHERE deletedAt IS NULL
UR -> PS: findMany() với include role
PS -> DB: Thực thi parallel queries
DB -> PS: Total count + users data với roles
PS -> UR: Users với metadata
UR -> US: Users data + metadata
US -> IS: i18n.t('user.user.success.GET_SUCCESS')
IS -> US: Trả về message đã localize
US -> UC: Phản hồi + Message đã localize
UC -> Admin: JSON với data + metadata

== GET /users/:userId - Chi Tiết Người Dùng ==
Admin -> UC: GET /users/:userId
UC -> US: findById(userId)

US -> SUR: findUniqueIncludeRolePermissions({id})
SUR -> PS: findUnique với include role permissions
PS -> DB: Query user với role permissions
DB -> PS: User profile đầy đủ
PS -> SUR: Thông tin user + quyền hạn
SUR -> US: User detail với role permissions

alt User tồn tại
    US -> IS: i18n.t('user.user.success.GET_DETAIL_SUCCESS')
    IS -> US: Trả về message đã localize
    US -> UC: Success response
    UC -> Admin: JSON user detail
else User không tồn tại
    US -> UC: NotFoundRecordException
    UC -> Admin: 404 Not Found
end

== POST /users - Tạo Người Dùng Mới ==
Admin -> UC: POST /users + {email, name, password, roleId, ...}
UC -> AU: @ActiveUser()
AU -> UC: Trả về user context
UC -> ARP: @ActiveRolePermissions('name')
ARP -> UC: Trả về roleName
UC -> US: create({data, user, roleName})

US -> US: verifyRole({roleNameAgent, roleIdTarget})
note right
Role Verification Logic:
• Chỉ Admin có quyền tạo user với role Admin
• Non-admin không thể tạo Admin user
• Validate roleIdTarget hợp lệ
end note

alt Role verification thành công
    US -> HS: hash(password)
    HS -> US: Trả về hashedPassword
    US -> UR: create({createdById, data})
    UR -> PS: INSERT user với audit fields
    PS -> DB: INSERT user với hashedPassword
    DB -> PS: User created
    PS -> UR: Trả về user đã tạo
    UR -> US: Trả về user data
    US -> IS: i18n.t('user.user.success.CREATE_SUCCESS')
    IS -> US: Trả về message đã localize
    US -> UC: Success response
    UC -> Admin: 201 Created + JSON response

else Role verification thất bại
    US -> UC: ForbiddenException
    UC -> Admin: 403 Forbidden
end

== PUT /users/:userId - Cập Nhật Người Dùng ==
Admin -> UC: PUT /users/:userId + {data}
UC -> AU: @ActiveUser()
AU -> UC: Trả về user context
UC -> ARP: @ActiveRolePermissions('name')
ARP -> UC: Trả về roleName
UC -> US: update({id, data, user, roleName})

US -> US: verifyYourself({userAgentId, userTargetId})
note right
Self-Operation Prevention:
• Không thể cập nhật chính mình
• userAgentId !== userTargetId
• Prevent self-modification
end note

alt Self-operation check passed
    US -> SUR: findUnique({id})
    SUR -> PS: Query current user
    PS -> DB: SELECT user với roleId
    DB -> PS: Current user data
    PS -> SUR: Trả về current user
    SUR -> US: Trả về current user
    US -> US: verifyRole({roleNameAgent, currentRoleId})

    alt Role verification thành công
        US -> SUR: update({id}, {data, updatedById})
        SUR -> PS: UPDATE user với audit
        PS -> DB: UPDATE user với audit fields
        DB -> PS: User updated
        PS -> SUR: Trả về updated user
        SUR -> US: Trả về user data
        US -> IS: i18n.t('user.user.success.UPDATE_SUCCESS')
        IS -> US: Trả về message đã localize
        US -> UC: Success response
        UC -> Admin: 200 OK + JSON response
    else Role verification thất bại
        US -> UC: ForbiddenException
        UC -> Admin: 403 Forbidden
    end
else Self-operation detected
    US -> UC: CannotUpdateOrDeleteYourselfException
    UC -> Admin: 403 Forbidden
end

== DELETE /users/:userId - Xóa Người Dùng ==
Admin -> UC: DELETE /users/:userId
UC -> AU: @ActiveUser()
AU -> UC: Trả về user context
UC -> ARP: @ActiveRolePermissions('name')
ARP -> UC: Trả về roleName
UC -> US: delete({id, user, roleName})

US -> US: verifyYourself({userAgentId, userTargetId})
US -> SUR: findUnique({id})
SUR -> PS: Query current user
PS -> DB: SELECT user với roleId
DB -> PS: Current user data
PS -> SUR: Trả về current user
SUR -> US: Trả về current user
US -> US: verifyRole({roleNameAgent, currentRoleId})

alt Role verification thành công
    US -> UR: delete({id, deletedById})
    UR -> PS: UPDATE deletedAt (soft delete)
    PS -> DB: UPDATE deletedAt field
    DB -> PS: User marked deleted
    PS -> UR: Trả về success
    UR -> US: Trả về success
    US -> IS: i18n.t('user.user.success.DELETE_SUCCESS')
    IS -> US: Trả về message đã localize
    US -> UC: Success response
    UC -> Admin: 200 OK + message
else Role verification thất bại
    US -> UC: ForbiddenException
    UC -> Admin: 403 Forbidden
end

== Xử Lý Lỗi & Validation ==
alt Lỗi unique constraint (email)
    UR -> US: UserAlreadyExistsException
    US -> UC: Throw exception
    UC -> Admin: 422 Unprocessable Entity

else Lỗi foreign key (roleId)
    UR -> US: RoleNotFoundException
    US -> UC: Throw exception
    UC -> Admin: 422 Unprocessable Entity

else Lỗi không tìm thấy user
    SUR -> US: Return null
    US -> US: Throw NotFoundRecordException
    US -> UC: Throw exception
    UC -> Admin: 404 Not Found

else Lỗi self-operation
    US -> UC: CannotUpdateOrDeleteYourselfException
    UC -> Admin: 403 Forbidden

else Lỗi không đủ quyền
    US -> UC: ForbiddenException
    UC -> Admin: 403 Forbidden
end

== Trả Kết Quả ==
US -> IS: i18n.t('user.user.success.XXX')
IS -> US: Trả về message đã localize
US -> UC: Phản hồi + Message đã localize
UC -> Admin: JSON Response với metadata đầy đủ

note bottom
**Đặc điểm chính của module User:**
• Role-based access control (Admin/Seller/User)
• Password hashing với HashingService
• Self-operation prevention
• Admin privilege validation
• Soft delete với audit trail
• Unique constraint validation (email)
• Foreign key validation (roleId)
• Multi-language support với I18nService
• Pagination với metadata
• Comprehensive error handling
end note

@enduml
